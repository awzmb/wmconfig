# make clipboard work inside vim (osx)
if-shell 'test "$(uname)" = "Darwin"' 'set-option -g default-command "reattach-to-user-namespace -l $SHELL"'

# clipboard (osx)
if-shell 'test "$(uname)" = "Darwin"' 'bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
if-shell 'test "$(uname)" = "Darwin"' 'bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"'

# 0 is too far from ` ;)
set-option -g base-index 1
set-window-option -g pane-base-index 1

set-option -g default-command $SHELL
set-option -g default-shell $SHELL

set-option -g prefix C-a
bind-key C-a last-window
bind-key a send-prefix

# automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on
set-option -g set-titles-string '[#S:#I #h] #W'

set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm:colors=256'
set -g status-keys vi
set -g history-limit 10000

# set vi mode
setw -g mode-keys vi

#bind-key Space choose-session

bind-key | split-window -h
bind-key - split-window -v

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. much more reasonable.
setw -g aggressive-resize on

# vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# use alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# use alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# easily toggle synchronization (mnemonic: e is for echo)
bind e setw synchronize-panes

# no delay for escape key press
set -sg escape-time 0

# reload tmux config
bind r source-file ~/.tmux.conf \; display-message 'reloaded ~/.tmux.conf!'

# set window notifications
setw -g monitor-activity on
set -g visual-activity off

# color configuration
set -g status-bg 'colour0'
set -g status-justify 'left'
set -g status-left-length '100'
set -g status 'on'
set -g status-right-length '100'
setw -g window-status-separator ''
set -g pane-border-style 'fg=colour0'
set -g pane-active-border-style 'fg=colour0'
set -g status-left '#[fg=colour7,bg=colour0,bold] #S '
set -g status-right '#[fg=colour7,bg=colour8]  %Y-%m-%d î‚³ %H:%M #[fg=colour0,bg=colour4] #h '
setw -g window-status-format '#[fg=colour7,bg=colour8] #I#F  #W  '
setw -g window-status-current-format '#[fg=colour0,bg=colour4] #I#F  #W '
